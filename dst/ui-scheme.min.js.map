{"version":3,"file":"ui-scheme.min.js","sources":["../src/utils/log.js","../src/utils/parsing.js","../src/core/symbols.js","../src/core/EventsChannel.js","../src/core/EventsTarget.js","../src/core/Extendable.js","../src/core/Element.js","../src/core/Styles.js","../src/core/Scheme.js","../src/utils/id-generator.js","../src/core/UI.js","../src/built-in/ui/Button.js","../src/built-in/ui/Input.js","../src/core/Extension.js","../src/browser.js","../src/core/Localization.js","../src/built-in/ui/Select.js","../src/built-in/ui/ProgressBar.js","../src/built-in/ui/LabeledText.js","../src/built-in/ui/Spinner.js","../src/built-in/extensions/InputFilter.js"],"sourcesContent":["let logPrefix = 'UIScheme:'\r\n\r\n\r\nexport function info(msg) {\r\n    console.info(logPrefix, msg)\r\n}\r\n\r\nexport function warn(msg) {\r\n    console.warn(logPrefix, msg)\r\n}\r\n\r\nexport function error(msg) {\r\n    console.warn(logPrefix, msg)\r\n}","import {warn} from './log';\r\n\r\nlet allowedTagNames = [\r\n    'div',\r\n    'p', 'span', 'a',\r\n    'b', 'i', 'u', 'sup', 'sub',\r\n    'font',\r\n    'meta',\r\n    'form', 'label', 'input', 'select', 'option', 'textarea', 'button',\r\n    'ul', 'ol', 'li',\r\n    'table', 'tbody', 'thead', 'tr', 'td',\r\n    'img', 'video', 'source', 'canvas',\r\n    'script', 'style', 'title', \r\n    'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\r\n    'blockquote', 'br', 'hr',\r\n    'main', 'section', 'article'\r\n];\r\n\r\nlet tagNameRegex    = /(^|\\s)\\w+/ig;\r\nlet classNamesRegex = /\\.\\w+[_\\-\\w\\d]*/ig;\r\nlet idRegex         = /#\\w+[_\\-\\w]*/ig;\r\n\r\n/**\r\n * Parses selector and returns tag name.\r\n * Also checks if tag name is valid.\r\n * \r\n * @param {string} selector \r\n */\r\nexport function parseTagName(selector) {\r\n    let tagName = selector.match(tagNameRegex);\r\n\r\n    if (tagName !== null && tagName.length > 0) {\r\n        tagName =  tagName[0];\r\n    }\r\n\r\n    if (tagName === null || tagName.length === 0) {\r\n        return 'div';\r\n    }\r\n\r\n    if (!allowedTagNames.includes(tagName)) {\r\n        warn('Invalid tag name used: ' + tagName);\r\n    }\r\n\r\n    if (tagName == undefined) {\r\n        return 'div';\r\n    }\r\n\r\n    return tagName;\r\n}\r\n\r\n/**\r\n * Parses selector and returns class name.\r\n * Few classes can be separated by space.\r\n * \r\n * @param {string} selector\r\n * @return {Array}\r\n */\r\nexport function parseClassNames(selector) {\r\n    let classNames = selector.match(classNamesRegex);\r\n    if (classNames !== null && classNames.length > 0) {\r\n        for (let i = 0; i < classNames.length; i++) {\r\n            classNames[i] = camelCaseToDashSeparated(classNames[i].slice(1));\r\n        }\r\n    }\r\n    return classNames === null ? [] : classNames;\r\n}\r\n\r\n/**\r\n * Parses ID from the given selector.\r\n * \r\n * @param {string} selector\r\n * @return {string}\r\n */\r\nexport function parseId(selector) {\r\n    let id = selector.match(idRegex);\r\n    if (id !== null && id.length > 0) {\r\n        return id[0].slice(1).trim();\r\n    }\r\n    return '';\r\n}\r\n\r\n/**\r\n * Parses attributes from the given selector.\r\n * \r\n * @param {Object} selector \r\n */\r\nexport function parseAttributes(selector) {\r\n    let attr = {}\r\n    let f = selector.split('[')\r\n    if (f.length > 1) {\r\n        f = f.split(']')\r\n        if (f.length > 0) {\r\n            f = f.split(/;,/)\r\n            for (let i = 0; i < f.length; i++) {\r\n                let a = f[i].split('=')\r\n                attr[a[0].trim()] = a.length > 1 ? a[1] : ''\r\n            }\r\n        }\r\n    }\r\n    return attr\r\n}\r\n\r\n\r\n/**\r\n * Splits string bu upper case.\r\n * @para {string} str\r\n * @return {Array}\r\n */\r\nexport function splitByUpperCase(str) {\r\n    return str.replace(/([A-Z]+)/g, \",$1\")\r\n        .replace(/^,/, '')\r\n        .split(',');\r\n}\r\n\r\n\r\n/**\r\n * Formats string to be useful in the \"id\" or \"class\" attribute.\r\n * @param {string} str\r\n * @return {string}\r\n */\r\nexport function camelCaseToDashSeparated(str) {\r\n    return splitByUpperCase(str.replace(/\\//g, '_').replace(' - ', '-'))\r\n        .join('-')\r\n        .replace(/([a-zA-Z_-])\\s+([a-zA-Z_\\-\\d])/g, \"$1-$2\")\r\n        .replace(/\\s*-+\\s*/gi, '-')\r\n        .replace(/-*_-*/gi, '_')\r\n        .toLowerCase();\r\n}","export const selectorSymbol     = Symbol('selector')\r\nexport const dataSymbol         = Symbol('data')\r\nexport const classesArraySymbol = Symbol('classesArray')\r\nexport const classNameSymbol    = Symbol('className')\r\nexport const idSymbol           = Symbol('id');\r\nexport const tagNameSymbol      = Symbol('tagName')\r\nexport const eventsSymbol       = Symbol('events')\r\nexport const extensionsSymbol   = Symbol('extensions')\r\nexport const elementSymbol      = Symbol('element')\r\nexport const isStylesRendered   = Symbol('stylesRendered')\r\nexport const targetSymbol       = Symbol('target')\r\n\r\n","let channels = {}\r\n\r\nexport default class EventsChannel\r\n{\r\n    constructor(context) {\r\n        this.context = context === undefined ? this : context\r\n        this.name = null\r\n        this.handlers = {}\r\n    }\r\n\r\n    on(eventName, handler) {\r\n        let arr = eventName.split('->')\r\n        arr.forEach((el, i, a) => a[i] = el.trim())\r\n\r\n        if (!this.handlers.hasOwnProperty(arr[0])) {\r\n            this.handlers[arr[0]] = new HandlersHub(arr[0])\r\n        }\r\n        this.handlers[arr[0]].addHandler(handler, arr.length > 1 ? arr[1] : undefined)\r\n    }\r\n\r\n    off(eventName) {\r\n        let arr = eventName.split('->')\r\n        arr.forEach((el, i, a) => a[i] = el.trim())\r\n\r\n        if (this.handlers.hasOwnProperty(arr[0])) {\r\n            if (arr.length > 1 && arr[1].length > 0) {\r\n                this.handlers[arr[0]].removePortHandler(arr[1])\r\n            } else {\r\n                this.handlers[arr[0]].removeAllHandlers()\r\n            }\r\n        }\r\n    }\r\n\r\n    trigger(eventName, ...params) {\r\n        let arr = eventName.split('->')\r\n        arr.forEach((el, i, a) => a[i] = el.trim())\r\n\r\n        if (this.handlers.hasOwnProperty(arr[0])) {\r\n            if (arr.length > 1 && arr[1].length > 0) {\r\n                this.handlers[arr[0]].runPortHandler(arr[1], this.context, ...params)\r\n            } else {\r\n                this.handlers[arr[0]].runAllHandlers(this.context, ...params)\r\n            }\r\n        }\r\n    }\r\n\r\n    triggerDirect(eventName, ...params) {\r\n        if (this.handlers.hasOwnProperty(eventName)) {\r\n            this.handlers[eventName].runAllHandlers(this.context, ...params)\r\n        }\r\n    }\r\n\r\n    static get(name, context) {\r\n    \tif (!channels.hasOwnProperty(name)) {\r\n            channels[name] = new EventsChannel(context)\r\n            channels[name].name = name\r\n    \t}\r\n    \treturn channels[name]\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nclass HandlersHub\r\n{\r\n\tconstructor(eventName) {\r\n        this.eventName = eventName\r\n\t\tthis.handlers = []\r\n\t\tthis.ports = {}\r\n    }\r\n    \r\n    addHandler(handler, port) {\r\n        if (port === undefined) {\r\n            this.handlers.push(handler)\r\n        } else {\r\n            this.ports[port] = handler\r\n        }\r\n    }\r\n\r\n    removeAllHandlers() {\r\n        this.handlers = []\r\n        this.ports = {}\r\n    }\r\n\r\n    removePortHandler(port) {\r\n        delete(this.ports[port])\r\n    }\r\n\r\n    runPortHandler(port, context, ...params) {\r\n        if (this.ports.hasOwnProperty(port)) {\r\n            this.ports[port].call(context, ...params)\r\n        }\r\n    }\r\n\r\n    runAllHandlers(context, ...params) {\r\n        for (let i = 0; i < this.handlers.length; i++) {\r\n            this.handlers[i].call(context, ...params)\r\n        }\r\n        for (let p in this.ports) {\r\n            this.ports[p].call(context, ...params)\r\n        }\r\n    }\r\n}\r\n","import { eventsSymbol } from './symbols'\r\nimport EventsChannel from './EventsChannel'\r\n\r\n\r\nexport default class EventsTarget\r\n{\r\n    constructor()\r\n    {\r\n        this[eventsSymbol] = new EventsChannel(this)\r\n    }\r\n\r\n    /**\r\n     * Adds event listener.\r\n     * Named listeners can be used:\r\n     * chat.on('message -> tray', msg => console.log(msg))\r\n     * \r\n     * @param {string} eventName \r\n     * @param {function} handler \r\n     */\r\n    on(eventName, handler) {\r\n        this[eventsSymbol].on(eventName, handler)\r\n    }\r\n\r\n    /**\r\n     * Removes event listener.\r\n     * \r\n     * @param {string} eventName \r\n     * @param {function} [handler]\r\n     */\r\n    off(eventName, handler) {\r\n        this[eventsSymbol].off(eventName, handler)\r\n    }\r\n\r\n    /**\r\n     * Fires event with given name.\r\n     * \r\n     * @param {*} eventName \r\n     * @param  {...any} data \r\n     */\r\n    trigger(eventName, ...data) {\r\n        this[eventsSymbol].trigger(eventName, ...data)\r\n    }\r\n}","import EventsTarget from './EventsTarget'\r\nimport { extensionsSymbol } from './symbols'\r\n\r\nexport default class Extendable extends EventsTarget\r\n{\r\n    constructor() {\r\n        super()\r\n        this[extensionsSymbol] = []\r\n    }\r\n}","import { parseTagName, parseId, parseClassNames, camelCaseToDashSeparated } from '../utils/parsing'\r\nimport { elementSymbol, eventsSymbol, extensionsSymbol } from './symbols'\r\nimport Extendable from './Extendable'\r\n\r\n\r\nexport default class Element extends Extendable\r\n{\r\n    constructor(selector) {\r\n        super()\r\n\r\n        let tagName = parseTagName(selector).toLowerCase()\r\n\r\n        // Create node for the element and save reference to it in hidden property.\r\n        this.node = document.createElement(tagName)\r\n        this.node[elementSymbol] = this\r\n\r\n        // Set id.\r\n        let id = parseId(selector)\r\n        if (id !== '') {\r\n            this.node.id = id\r\n        }\r\n        \r\n        // Set class name.\r\n        let className = parseClassNames(selector).join(' ')\r\n        if (className !== '') {\r\n            this.node.className = className\r\n        }\r\n        this.selector = tagName + (id === '' ? '' : '#' + id) + (className === '' ? '' : '.' + className.replace(' ', '.'))\r\n\r\n        // Define value property for input fields.\r\n        if (tagName === 'input' || tagName === 'textarea' || tagName === 'select') {\r\n            Object.defineProperty(this, 'value', {\r\n                get() {\r\n                    return this.node.value\r\n                },\r\n                set(v) {\r\n                    this.node.value = v\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets one or few styles of the node.\r\n     * If style argument is string only one style will be set to value.\r\n     * If style argument is object styles will be set from its properties \r\n     * and value will be omitted.\r\n     * \r\n     * @param {string|object} style \r\n     * @param {*} value \r\n     */\r\n    css(style, value) {\r\n        if (typeof style === 'object') {\r\n            for (let p in style) {\r\n                this.node.style[p] = style[p]\r\n            }\r\n        } else {\r\n            this.node.style[style] = value\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets or gets attribute of the node.\r\n     * To get attribute value must be omitted.\r\n     * \r\n     * @param {string} name \r\n     * @param {*} value \r\n     */\r\n    attr(name, value) {\r\n        if (value === undefined) {\r\n            return this.node.getAttribute(name)\r\n        }\r\n        this.node.setAttribute(name, value)\r\n    }\r\n\r\n    /**\r\n     * Returns node of the element.\r\n     * @return {HTMLElement}\r\n     */\r\n    node() {\r\n        return this.node\r\n    }\r\n}\r\n\r\nElement.symbol = elementSymbol\r\n\r\n\r\n\r\n\r\n\r\n// Hook all native events and process them using custom handler.\r\n// Its necessary to avoid using node property and attach events handler directly to the element.\r\n// For example inside onRender() method:\r\n// this.form.on('submit', e => this.sendRequest())\r\n\r\n// List of events tht will be hooked\r\nlet nativeEvents = [\r\n    'submit', 'abort', 'beforeinput', 'blur', 'click', 'compositionen', 'paste',\r\n    'compositionstart', 'compositionupdate', 'dblclick', 'error', 'focus', 'change',\r\n    'focusin', 'focusout', 'input', 'keydown', 'keypress', 'keyup', 'load',\r\n    'mousedown', 'mouseenter', 'mouseleave', 'mousemove', 'mouseout', 'mouseover', 'mousewheel',\r\n    'mouseup', 'resize', 'scroll', 'select', 'unload', 'wheel', 'touchstart', 'touchend', 'touchmove'\r\n]\r\n\r\n// Define custom handler\r\nfunction eventHook(event, ...params) {\r\n    let parent = event.target\r\n    if (parent.hasOwnProperty(elementSymbol)) {\r\n        event.targetElement = parent[elementSymbol]\r\n    }\r\n    while (parent !== null && parent.hasOwnProperty(elementSymbol)) {\r\n        parent[elementSymbol][eventsSymbol].triggerDirect(event.type, event, ...params)\r\n        parent = parent.parentNode\r\n    }  \r\n}\r\n\r\n// Attach handler\r\nfor (let i = 0, len = nativeEvents.length; i < len; i++) {\r\n    document.addEventListener(nativeEvents[i], eventHook, {\r\n        capture: true\r\n    })\r\n}","import Element from './Element';\r\nimport {camelCaseToDashSeparated} from '../utils/parsing';\r\n\r\nexport default class Styles\r\n{\r\n    constructor(data) {\r\n        this.cssObject = data;\r\n        this.cssString = '';\r\n        this.styleNode = null;\r\n\r\n        if (Styles.headNode === undefined) {\r\n            Styles.headNode = document.getElementsByTagName('head')[0];\r\n        }\r\n    }\r\n\r\n    renderFor(ui, enforce) {\r\n        // Don't do anything if styles already rendered and enforce is not required.\r\n        if (this.cssString !== '' && enforce !== true) {\r\n            return;\r\n        }\r\n\r\n        // Render styles.\r\n        this.cssString = Styles.renderRules(ui, ui.rootElement.selector, this.cssObject);\r\n\r\n        // Remove old style node.\r\n        if (this.styleNode !== null) {\r\n            Styles.headNode.removeChild(this.styleNode);\r\n        }\r\n\r\n        // Create new style node and append it to head.\r\n        this.styleNode = document.createElement('style');\r\n        this.styleNode.textContent = \"\\n\" + this.cssString + \"\\n\";\r\n        Styles.headNode.appendChild(this.styleNode);\r\n    }\r\n\r\n\r\n    static renderRules(target, selector, rules) {\r\n        let res = selector + \" {\\n\";\r\n        let nestedRes = '';\r\n        let prefix = '    ';\r\n\r\n        for (let p in rules) {\r\n            let v = rules[p];\r\n            if (typeof v === 'string' || typeof v === 'number') {\r\n                res += prefix + camelCaseToDashSeparated(p) + ': ' + rules[p] + \";\\n\";\r\n            } else if (target[p]) {\r\n                let t = target[p] instanceof Element ? target[p] : target[p].rootElement;\r\n                nestedRes += Styles.renderRules(t, selector + ' > ' + t.selector, v);\r\n            } else if (p[0] === ':' || p[0] === '.' || p[0] === '[' || p[0] === '#' || p[0] === ' ' || p[0] === '>') {\r\n                nestedRes += Styles.renderRules(target, selector + p, v);\r\n            } else if (p[0] === '@') {\r\n                nestedRes += Styles.renderRules(target, p, v)\r\n            } else {\r\n                res += Styles.renderRules(target, p, v);\r\n            }\r\n        }\r\n        return res + \"}\\n\" + nestedRes;\r\n    }\r\n}","import Element from './Element';\r\nimport {parseId, parseClassNames, parseTagName, camelCaseToDashSeparated} from '../utils/parsing';\r\nimport { tagNameSymbol, idSymbol, classesArraySymbol, dataSymbol, selectorSymbol } from './symbols';\r\n\r\n\r\nexport default class Scheme\r\n{\r\n    constructor(selector, data) {\r\n        if (typeof selector === 'object') {\r\n            data = selector;\r\n            selector = '';\r\n        }\r\n\r\n        if (typeof data !== 'object') {\r\n            data = {};\r\n        }\r\n\r\n        this[tagNameSymbol]  = camelCaseToDashSeparated(parseTagName(selector));\r\n        this[idSymbol]       = parseId(selector);\r\n        this[classesArraySymbol] = parseClassNames(selector);\r\n        this[dataSymbol]     = data;\r\n        this[selectorSymbol] = this[tagNameSymbol];\r\n\r\n        if (this[idSymbol] !== '') {\r\n            this[selectorSymbol] += '#' + this[idSymbol];\r\n        }\r\n\r\n        if (this[classesArraySymbol].length > 0) {\r\n            this[selectorSymbol] += '.' + this[classesArraySymbol].join('.');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Builds scheme and returns root element.\r\n     * @param {Scheme} scheme\r\n     * @param {string} [namespace]\r\n     */\r\n    static build(scheme, namespace) {\r\n        if (namespace === undefined || namespace === '') {\r\n            namespace = '';\r\n        } else {\r\n            namespace = '.' + camelCaseToDashSeparated(namespace);\r\n        }\r\n\r\n        // Prepare root element.\r\n        let rootElement = new Element(scheme[selectorSymbol] + namespace);\r\n\r\n        // Render all nested items into the root element.\r\n        let data = scheme[dataSymbol];\r\n        for (let p in data) {\r\n\r\n            // If item represented as string - convert it into the scheme.\r\n            if (typeof data[p] === 'string') {\r\n                data[p] = new Scheme(data[p].indexOf('.') < 0 ? data[p] + '.' + p : data[p]);\r\n            }\r\n\r\n            let newClass = camelCaseToDashSeparated(p)\r\n\r\n            // If item is scheme - build it into the root element.\r\n            if (data[p] instanceof Scheme) {\r\n                rootElement[p] = Scheme.build(data[p]);\r\n                rootElement[p].selector += '.' + newClass\r\n                rootElement[p].node.classList.add(newClass)\r\n                rootElement.node.appendChild(rootElement[p].node)\r\n\r\n            // If item is UI - append it to the root element.    \r\n            } else if (typeof data[p].appendTo === 'function') {\r\n                data[p].rootElement.selector += '.' + newClass\r\n                data[p].rootElement.node.classList.add(newClass)\r\n                data[p].appendTo(rootElement);\r\n                rootElement[p] = data[p];\r\n            } else if (typeof data[p] === 'object') {\r\n                rootElement[p] = Scheme.build(new Scheme(data[p]));\r\n                rootElement[p].selector += '.' + newClass\r\n                rootElement[p].node.classList.add(newClass)\r\n                rootElement.node.appendChild(rootElement[p].node);\r\n            }\r\n        }\r\n        return rootElement;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","let counter = 0;\r\n\r\n\r\n\r\nexport default function getUniqueId() {\r\n    counter++;\r\n    return 'uis-id-' + counter;\r\n}","import Styles from \"./Styles\"\r\nimport Scheme from \"./Scheme\"\r\nimport Element from './Element'\r\nimport getUniqueId from '../utils/id-generator'\r\nimport { classesArraySymbol, classNameSymbol, eventsSymbol, isStylesRendered } from './symbols'\r\nimport Extendable from './Extendable'\r\n\r\n\r\nexport default class UI extends Extendable\r\n{\r\n    constructor(params) {\r\n        super()\r\n\r\n        // Ensure that class name is specified.\r\n        if (!this.constructor.hasOwnProperty(classNameSymbol)) {\r\n            this.constructor[classNameSymbol] = getUniqueId()\r\n        }\r\n\r\n        // Purify params.\r\n        let defaultParams = this.defaultParams()\r\n        this.params = typeof params === 'object' ? params : {}\r\n\r\n        // Copy params from default that are absent in the given.\r\n        if (typeof defaultParams === 'object' && typeof params === 'object') {\r\n            for (let p in defaultParams) {\r\n                if (!this.params.hasOwnProperty(p)) {\r\n                    this.params[p] = defaultParams[p]\r\n                }\r\n            }\r\n        }\r\n\r\n        // Run initialization method.\r\n        this.init(...arguments)\r\n\r\n        // Do all dirty work :)\r\n        this.render(this.params);\r\n\r\n        if (!this.constructor.hasOwnProperty(isStylesRendered)) {\r\n            this.createStyles().renderFor(this, false)\r\n            this.constructor[isStylesRendered] = true\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Allows to initialize additional parameters before rendering.\r\n     * This method may be overridden in sub-class.\r\n     * \r\n     * @param {Object} params \r\n     */\r\n    init(params) {}\r\n\r\n    /**\r\n     * Creates scheme of the UI.\r\n     * The good reason is to keep all structure inside one container (usually named \"wrap\").\r\n     * \r\n     * @return {Scheme}\r\n     */\r\n    createScheme() {\r\n        return new Scheme({});\r\n    }\r\n\r\n    /**\r\n     * Overrides parameters that was defined for rendering.\r\n     * This method called before creating any nodes but after initialization of parameters.\r\n     * \r\n     * @param {Object} params\r\n     */\r\n    onBeforeRender(params) {}\r\n\r\n    /**\r\n     * Handles rendering of the UI.\r\n     * This method called just after instance creation.\r\n     * \r\n     * @param {Object} params\r\n     */\r\n    onRender(params) {}\r\n\r\n    /**\r\n     * Renders UI with given parameters.\r\n     * \r\n     * @param {Object} params \r\n     */\r\n    render(params) {\r\n        this.onBeforeRender(params);\r\n        this.trigger('beforeRender');\r\n\r\n        let scheme = this.createScheme();\r\n\r\n        if (typeof scheme === 'string') {\r\n            scheme = new Scheme(scheme);\r\n        } else if (!(scheme instanceof Scheme)) {\r\n            scheme = new Scheme('div', scheme);\r\n        }\r\n\r\n        let namespace = scheme[classesArraySymbol].join(' ')\r\n        if (namespace.length <= 1 || namespace === 'Function') {\r\n            namespace = this.constructor[classNameSymbol]\r\n        } else {\r\n            namespace = ''\r\n        }\r\n        this.rootElement = Scheme.build(scheme, namespace);\r\n\r\n        for (let p in this.rootElement) {\r\n            if (this.rootElement.hasOwnProperty(p) && (this.rootElement[p] instanceof Element || this.rootElement[p] instanceof UI)) {\r\n                this[p] = this.rootElement[p];\r\n            }\r\n        }\r\n\r\n        this.onRender(params);\r\n        this.trigger('render');\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Override this method to change target in which UI will be rendered to.\r\n     * To change target just return another target.\r\n     * \r\n     * @param {string|Element} target \r\n     */\r\n    onBeforeAppend(target) {\r\n        return target;\r\n    }\r\n\r\n    /**\r\n     * Appends UI to the given target.\r\n     * If target is string it will be considered as CSS selector.\r\n     * \r\n     * @param {string|Element|UI} target \r\n     */\r\n    appendTo(target) {\r\n        // Allow user to override target.\r\n        let tmpTarget = this.onBeforeAppend(target);\r\n        this.trigger('beforeAppend');\r\n\r\n        if (tmpTarget !== undefined) {\r\n            target = tmpTarget;\r\n        }\r\n\r\n        let targetNode = target;\r\n        if (typeof target === 'string') {\r\n            targetNode = document.querySelector(target);\r\n        } else if (target instanceof Element) {\r\n            targetNode = target.node;\r\n        } else if (target instanceof UI) {\r\n            targetNode = target.rootElement.node;\r\n        }\r\n\r\n        targetNode.appendChild(this.rootElement.node);\r\n\r\n        this.onAppend(target);\r\n        this.trigger('append', target);\r\n    }\r\n\r\n    /**\r\n     * This method will be called just after appending.\r\n     * \r\n     * @param {string|Element} target \r\n     */\r\n    onAppend(target) {}\r\n\r\n  \r\n\r\n    /**\r\n     * Called before loading.\r\n     * Use this method to modify data to be loaded.\r\n     * \r\n     * @param {Object} data\r\n     */\r\n    onBeforeLoad(data) {}\r\n\r\n    /**\r\n     * Modifies or overrides default loading logic.\r\n     * To override loading prevent default of the given event.\r\n     * This method should modify given data object.\r\n     * \r\n     * @param {Object} data \r\n     * @param {Event} event\r\n     */\r\n    onLoad(data, event) {}\r\n\r\n    /**\r\n     * Modifies or overrides default gathering logic.\r\n     * To override gathering prevent default of the given event.\r\n     * \r\n     * @param {Object} data \r\n     * @param {Event} event \r\n     */\r\n    onGather(data, event) {}\r\n\r\n    /**\r\n     * Returns styles of the UI.\r\n     * This method must be overridden in the child class.\r\n     * \r\n     * @return {Styles}\r\n     */\r\n    createStyles() {\r\n        return new Styles({});\r\n    }\r\n\r\n    /**\r\n     * Defines initial parameters of the UI.\r\n     * Can be overridden by sub-class.\r\n     * Can returns any static object because all properties will be copied in the final params.\r\n     * IMPORTANT! Nested objects will be copied as references.\r\n     * \r\n     * @return {Object|null}\r\n     */\r\n    defaultParams() {\r\n        return null;\r\n    }\r\n}","import UI from '../../core/UI'\r\nimport Scheme from '../../core/Scheme'\r\nimport Styles from '../../core/Styles'\r\n\r\nexport default class Button extends UI {\r\n    init(text, color) {\r\n        this.params.text = text\r\n        this.params.color = color || Button.PRIMARY\r\n    }\r\n\r\n    get disabled() {\r\n        return this.rootElement.node.disabled\r\n    }\r\n\r\n    set disabled(v) {\r\n        this.rootElement.node.disabled = v === true\r\n    }\r\n\r\n    createScheme() {\r\n        return new Scheme('button', {})\r\n    }\r\n\r\n    onRender(params) {\r\n        this.rootElement.node.textContent = params.text\r\n        this.rootElement.node.classList.add(params.color)\r\n        this.rootElement.on('click', e => this.trigger('click', e))\r\n    }\r\n\r\n    createStyles() {\r\n        return new Styles({\r\n            textAlign: 'center',\r\n            justifyContent: 'center',\r\n            flexShrink: 0,\r\n            height: '2.5rem',\r\n            padding: '0.25rem 1.5rem',\r\n            fontSize: '1rem',\r\n            border: 'none',\r\n            borderRadius: '0.25rem',\r\n            color: '#fff',\r\n            cursor: 'pointer',\r\n            userSelect: 'none',\r\n            outline: 'none',\r\n\r\n            ':disabled': {\r\n                opacity: 0.5,\r\n                pointerEvents: 'none'\r\n            },\r\n\r\n            '.primary': {\r\n                backgroundColor: '#39f',\r\n            },\r\n\r\n            '.red': {\r\n                backgroundColor: '#ff3a3a',\r\n            },\r\n\r\n            '.primary:hover': {\r\n                backgroundColor: '#1f8fff'\r\n            },\r\n\r\n            '.red:hover': {\r\n                backgroundColor: '#eb2123'\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nButton.PRIMARY = 'primary'\r\nButton.RED = 'red'","import UI from '../../core/UI'\r\nimport Scheme from '../../core/Scheme'\r\nimport Styles from '../../core/Styles'\r\n\r\nexport default class Input extends UI {\r\n    init(placeholder, value, type) {\r\n        this.params.placeholder = placeholder\r\n        this.params.value = value === undefined ? '' : value\r\n        this.params.type = type || Input.TEXT\r\n    }\r\n\r\n    createScheme() {\r\n        return new Scheme('label', {\r\n            input: 'input',\r\n            label: 'span.label'\r\n        })\r\n    }\r\n\r\n    get value() {\r\n        return this.input.node.value\r\n    }\r\n\r\n    set value(v) {\r\n        this.input.node.value = v\r\n        this.checkEmpty()\r\n    }\r\n\r\n    get disabled() {\r\n        return this.input.node.disabled\r\n    }\r\n\r\n    set disabled(v) {\r\n        this.input.node.disabled = v === true\r\n    }\r\n\r\n    focus() {\r\n        this.input.node.focus()\r\n    }\r\n\r\n    checkEmpty() {\r\n        this.input.node.value === ''\r\n            ? this.input.node.classList.remove('not-empty')\r\n            : this.input.node.classList.add('not-empty')\r\n    }\r\n\r\n    onRender(params) {\r\n        this.label.node.textContent =  params.placeholder\r\n        this.input.node.value = params.value\r\n        this.input.node.setAttribute('type', params.type)\r\n        this.checkEmpty()\r\n\r\n        this.input.on('change', e => {\r\n            this.checkEmpty()\r\n            this.trigger('change', this.value, ...arguments)\r\n        })\r\n\r\n        this.input.on('input', () => {\r\n            this.checkEmpty()\r\n            this.trigger('input', this.value, ...arguments)\r\n        })\r\n    }\r\n\r\n    createStyles() {\r\n        return new Styles({\r\n            display: 'flex',\r\n            flexShrink: 0,\r\n            alignItems: 'center',\r\n            position: 'relative',\r\n            width: '100%',\r\n\r\n            input: {\r\n                display: 'flex',\r\n                padding: '0 0.75rem',\r\n                width: '100%',\r\n                height: '2.5rem',\r\n                fontSize: '0.95rem',\r\n                borderRadius: '0.25rem',\r\n                border: '1px solid #ccc',\r\n                outline: 'none',\r\n\r\n                ':disabled': {\r\n                    opacity: 0.5,\r\n                    pointerEvents: 'none'\r\n                },\r\n\r\n                ':disabled + .label': {\r\n                    opacity: 0.5,\r\n                    pointerEvents: 'none'\r\n                },\r\n\r\n                ':focus': {\r\n                    borderColor: '#38a3fc',\r\n                    boxShadow: '0 0 0 1px #38a3fc'\r\n                },\r\n\r\n                '.not-empty + .label': {\r\n                    top: '-0.75rem'\r\n                },\r\n\r\n                ':focus + .label': {\r\n                    top: '-0.75rem'\r\n                }\r\n            },\r\n\r\n            label: {\r\n                position: 'absolute',\r\n                left: '0.4rem',\r\n                top: '0.58rem',\r\n                fontSize: '0.8rem',\r\n                color: '#999',\r\n                padding: '0.1rem 0.35rem',\r\n                backgroundColor: '#fff',\r\n                marginRight: 'auto',\r\n                transition: '0.25s',\r\n                pointerEvents: 'none'\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nInput.TEXT = 'text'\r\nInput.NUMBER = 'number'\r\nInput.EMAIL = 'email'\r\nInput.PASSWORD = 'password'","import EventsTarget from './EventsTarget'\r\nimport { targetSymbol, extensionsSymbol } from './symbols'\r\nimport { error } from '../utils/log'\r\n\r\n\r\nexport default class Extension extends EventsTarget\r\n{\r\n    constructor() {\r\n        super()\r\n        this[targetSymbol] = null\r\n        this.init(arguments)\r\n    }\r\n\r\n    /**\r\n     * Allows to initialize extension with given arguments.\r\n     * Must be overridden in sub-class.\r\n     */\r\n    init() {}\r\n\r\n    /**\r\n     * Returns target on which extension is applied.\r\n     * \r\n     * @return {Extendable|null}\r\n     */\r\n    getTarget() {\r\n        return this[targetSymbol]\r\n    }\r\n\r\n    /**\r\n     * Process applying.\r\n     * Will be called just after applyTo() method will be called.\r\n     * \r\n     * @param {Extendable} target \r\n     */\r\n    onApply(target) {}\r\n\r\n    /**\r\n     * Process removing.\r\n     * Will be called just at start of remove() method.\r\n     */\r\n    onRemove() {}\r\n\r\n    /**\r\n     * Applies extension to the given target.\r\n     * Works only if extension is not applied yet.\r\n     * Triggers 'apply' event.\r\n     * \r\n     * @param {Extendable} target \r\n     * @fires apply\r\n     */\r\n    applyTo(target) {\r\n        // Check if extension is not applied yet.\r\n        if (this[targetSymbol] !== null) {\r\n            error('Unable to apply extension: it\\'s already applied.')\r\n            return\r\n        }\r\n\r\n        this[targetSymbol] = target\r\n        target[extensionsSymbol].push(this)\r\n\r\n        // Trigger necessary events.\r\n        this.onApply(target)\r\n        this.trigger('apply', target)\r\n    }\r\n\r\n    /**\r\n     * Removes extension from its target.\r\n     * Triggers 'remove' event.\r\n     * \r\n     * @fires remove\r\n     */\r\n    remove() {\r\n        if (this[targetSymbol] !== null) {\r\n            let target = this[targetSymbol]\r\n            let extensions = target[extensionsSymbol]\r\n\r\n            this.onRemove(target)\r\n            this.trigger('remove', target)\r\n\r\n            for (let i = 0; i < extensions.length; i++) {\r\n                if (extensions[i] === this) {\r\n                    extensions.splice(i, 1)\r\n                    break\r\n                }\r\n            }\r\n\r\n            this[targetSymbol] = null\r\n        }\r\n    }\r\n}","import UI from './core/UI';\r\nimport Scheme from './core/Scheme';\r\nimport Styles from './core/Styles';\r\nimport EventsChannel from './core/EventsChannel';\r\nimport Localization from './core/Localization';\r\nimport Spinner from './built-in/ui/Spinner';\r\nimport Button from './built-in/ui/Button';\r\nimport Input from './built-in/ui/Input';\r\nimport Select from './built-in/ui/Select';\r\nimport ProgressBar from './built-in/ui/ProgressBar';\r\nimport LabeledText from './built-in/ui/LabeledText';\r\nimport InputFilter from './built-in/extensions/InputFilter';\r\n\r\n\r\nwindow.UIScheme = {\r\n    UI, Scheme, Styles, EventsChannel, Localization,\r\n    builtIn: {\r\n        ui: {\r\n            Button,\r\n            Input,\r\n            Select,\r\n            ProgressBar,\r\n            LabeledText,\r\n            Spinner\r\n        },\r\n        extensions: {\r\n            InputFilter\r\n        }\r\n    }\r\n}\r\n","import { eventsSymbol } from './symbols';\r\nimport EventsChannel from './EventsChannel';\r\n\r\nexport default class Localization\r\n{\r\n    constructor(data) {\r\n        this.locale = 'en'\r\n        this.translations = data || {}\r\n\r\n        this[eventsSymbol] = new EventsChannel()\r\n\r\n        this.translate = (text, data) => {\r\n            let msg = text\r\n            if (this.translations.hasOwnProperty(this.locale) && this.translations[this.locale].hasOwnProperty(text)) {\r\n                msg = this.translations[this.locale][text]\r\n            }\r\n            if (typeof data === 'object') {\r\n                for (let p in data) {\r\n                    msg = msg.replace('{' + p + '}', data[p])\r\n                }\r\n            }\r\n            return msg\r\n        }\r\n    }\r\n\r\n    switchLocaleTo(locale) {\r\n        this.locale = locale\r\n        this.trigger('change', locale)\r\n    }\r\n\r\n    /**\r\n     * Adds event listener.\r\n     * Can be used named listeners:\r\n     * chat.on('newMessage -> tray', function() { // ... });\r\n     * \r\n     * @param {string} eventName \r\n     * @param {function} handler \r\n     */\r\n    on(eventName, handler) {\r\n        this[eventsSymbol].on(eventName, handler)\r\n    }\r\n\r\n    /**\r\n     * Removes event listener.\r\n     * \r\n     * @param {string} eventName \r\n     * @param {function} [handler]\r\n     */\r\n    off(eventName, handler) {\r\n        this[eventsSymbol].off(eventName, handler)\r\n    }\r\n\r\n    /**\r\n     * Fires event with given name.\r\n     * \r\n     * @param {*} eventName \r\n     * @param  {...any} data \r\n     */\r\n    trigger(eventName, ...data) {\r\n        this[eventsSymbol].trigger(eventName, ...data)\r\n    }\r\n}","import UI from '../../core/UI'\r\nimport Scheme from '../../core/Scheme'\r\nimport Styles from '../../core/Styles'\r\n\r\nexport default class Select extends UI {\r\n\r\n    init(placeholder, value, options) {\r\n        this.params.placeholder = placeholder\r\n        this.params.value = value === undefined ? '' : value\r\n        this.params.options = options || {}\r\n    }\r\n\r\n    createScheme() {\r\n        return new Scheme('label', {\r\n            select: 'select',\r\n            label: 'span.label'\r\n        })\r\n    }\r\n\r\n    generateOptions() {\r\n        this.select.node.innerHTML = ''\r\n        let emptyOption = document.createElement('option')\r\n        this.select.node.appendChild(emptyOption)\r\n        for (let p in this.params.options) {\r\n            let option = document.createElement('option')\r\n            option.setAttribute('value', p)\r\n            option.textContent = this.params.options[p]\r\n            this.select.node.appendChild(option)\r\n        }\r\n    }\r\n\r\n\r\n    setOptions(options) {\r\n        this.params.options = options\r\n        this.generateOptions()\r\n    }\r\n\r\n    get value() {\r\n        return this.select.node.value\r\n    }\r\n\r\n    set value(v) {\r\n        this.select.node.value = v\r\n        this.checkEmpty()\r\n    }\r\n\r\n    get disabled() {\r\n        return this.select.node.disabled\r\n    }\r\n\r\n    set disabled(v) {\r\n        this.select.node.disabled = v === true\r\n    }\r\n\r\n    checkEmpty() {\r\n        this.select.node.value === ''\r\n            ? this.select.node.classList.remove('not-empty')\r\n            : this.select.node.classList.add('not-empty')\r\n    }\r\n\r\n    onRender(params) {\r\n        this.label.node.textContent =  params.placeholder\r\n        this.select.node.value = params.value\r\n        this.generateOptions()\r\n\r\n        this.checkEmpty()\r\n\r\n        this.select.on('change', e => {\r\n            this.checkEmpty()\r\n            this.trigger('change', this.value, ...arguments)\r\n        })\r\n    }\r\n\r\n    createStyles() {\r\n        return new Styles({\r\n            display: 'flex',\r\n            flexShrink: 0,\r\n            alignItems: 'center',\r\n            position: 'relative',\r\n            width: '100%',\r\n\r\n            select: {\r\n                display: 'flex',\r\n                padding: '0 0.75rem',\r\n                width: '100%',\r\n                height: '2.5rem',\r\n                fontSize: '0.95rem',\r\n                borderRadius: '0.25rem',\r\n                border: '1px solid #ccc',\r\n                outline: 'none',\r\n\r\n                ':disabled': {\r\n                    opacity: 0.5,\r\n                    pointerEvents: 'none'\r\n                },\r\n\r\n                ':disabled + .label': {\r\n                    opacity: 0.5,\r\n                    pointerEvents: 'none'\r\n                },\r\n\r\n                ':focus': {\r\n                    borderColor: '#38a3fc',\r\n                    boxShadow: '0 0 0 1px #38a3fc'\r\n                },\r\n\r\n                '.not-empty + .label': {\r\n                    top: '-0.75rem'\r\n                }\r\n            },\r\n\r\n            label: {\r\n                position: 'absolute',\r\n                left: '0.4rem',\r\n                top: '0.58rem',\r\n                fontSize: '0.8rem',\r\n                color: '#999',\r\n                padding: '0.1rem 0.35rem',\r\n                backgroundColor: '#fff',\r\n                marginRight: 'auto',\r\n                transition: '0.25s',\r\n                pointerEvents: 'none'\r\n            }\r\n        })\r\n    }\r\n}","import UI from '../../core/UI'\r\nimport Scheme from '../../core/Scheme'\r\nimport Styles from '../../core/Styles'\r\n\r\n\r\nexport default class ProgressBar extends UI {\r\n    init(value) {\r\n        if (value < 0) value = 0\r\n        if (value > 100) value = 100\r\n        this.params.value = value\r\n    }\r\n\r\n    createScheme() {\r\n        return new Scheme('div.progress-bar', {\r\n            wrap: {\r\n                bar: 'div.bar'\r\n            }\r\n        })\r\n    }\r\n\r\n    get value() {\r\n        return this.params.value\r\n    }\r\n\r\n    set value(v) {\r\n        if (v < 0) v = 0\r\n        if (v > 100) v = 100\r\n        this.params.value = v\r\n        this.wrap.bar.css('width', v + '%')\r\n    }\r\n\r\n    onRender(params) {\r\n        this.wrap.bar.css('width', params.value + '%')\r\n    }\r\n\r\n    createStyles() {\r\n        return new Styles({\r\n            display: 'flex',\r\n            flexGrow: 1,\r\n\r\n            wrap: {\r\n                height: '0.5rem',\r\n                width: '100%',\r\n                border: '1px solid #999',\r\n\r\n                bar: {\r\n                    height: '100%',\r\n                    width: 0,\r\n                    backgroundColor: '#38a3fc'\r\n                }\r\n            }\r\n        })\r\n    }\r\n}","import UI from '../../core/UI'\r\nimport Scheme from '../../core/Scheme'\r\nimport Styles from '../../core/Styles'\r\n\r\nexport default class LabeledText extends UI {\r\n    init(label, text, labelWidth) {\r\n        this.params.label = label\r\n        this.params.text = text\r\n        this.params.labelWidth = labelWidth || 'auto'\r\n    }\r\n\r\n    get text() {\r\n        return this.params.text\r\n    }\r\n\r\n    set text(v) {\r\n        this.params.text = v\r\n        this.textDiv.node.textContent = v\r\n    }\r\n\r\n    get label() {\r\n        return this.params.label\r\n    }\r\n\r\n    set label(v) {\r\n        this.params.label = v\r\n        this.labelDiv.node.textContent = v\r\n    }\r\n\r\n    createScheme() {\r\n        return new Scheme('div.labeled-text', {\r\n            labelDiv: 'div.label',\r\n            textDiv: 'div.text'\r\n        })\r\n    }\r\n\r\n    onRender(params) {\r\n        this.textDiv.node.textContent = params.text\r\n        this.labelDiv.node.textContent = params.label\r\n        if (params.labelWidth !== 'auto') {\r\n            this.labelDiv.css('width', params.labelWidth + 'rem')\r\n        }\r\n    }\r\n\r\n    createStyles() {\r\n        return new Styles({\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n\r\n            labelDiv: {\r\n                fontSize: '0.75rem',\r\n                marginRight: '0.5rem',\r\n\r\n                ':after': {\r\n                    content: '\":\"'\r\n                }\r\n            },\r\n\r\n            textDiv: {\r\n                fontSize: '0.75rem'\r\n            }\r\n        })\r\n    }\r\n}","import UI from '../../core/UI'\r\nimport Scheme from '../../core/Scheme'\r\nimport Styles from '../../core/Styles'\r\n\r\nexport default class Spinner extends UI {\r\n    init(size, speed) {\r\n        this.params.size = size || 3\r\n        this.params.speed = speed || 360\r\n    }\r\n\r\n    createScheme() {\r\n        return new Scheme('div', {\r\n            circle: 'div'\r\n        })\r\n    }\r\n\r\n    get size() {\r\n        return this.params.size\r\n    }\r\n\r\n    set size(size) {\r\n        this.params.size = size\r\n        this.rootElement.css({\r\n            width: this.params.size.toString() + 'rem',\r\n            height: this.params.size.toString() + 'rem'\r\n        })\r\n    }\r\n\r\n    get speed() {\r\n        return this.params.speed\r\n    }\r\n\r\n    set speed(v) {\r\n        this.params.speed = v\r\n    }\r\n\r\n    onRender(params) {\r\n        this.size = params.size\r\n\r\n        let angle = 0\r\n        let applyRotation = () => {\r\n            angle += params.speed / 60\r\n            if (angle > 360) angle -= 360\r\n            this.rootElement.css('transform', 'rotate(' + angle + 'deg)')\r\n            requestAnimationFrame(applyRotation)\r\n        }\r\n        requestAnimationFrame(applyRotation)\r\n    }\r\n\r\n    createStyles() {\r\n        return new Styles({\r\n            position: 'relative',\r\n\r\n\r\n            circle: {\r\n                width: '80%',\r\n                height: '80%',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n                marginLeft: '-40%',\r\n                marginTop: '-40%',\r\n                borderLeft: '5px solid transparent',\r\n                borderRight: '5px solid transparent',\r\n                borderTop: '5px solid #38a3fc',\r\n                borderBottom: '5px solid #38a3fc',\r\n                borderRadius: '100%'\r\n            }\r\n        })\r\n    }\r\n}","import Extension from '../../core/Extension'\r\n\r\n/**\r\n * Allows live filter for input fields which implements 'input' or 'change' events.\r\n * \r\n * Example:\r\n * let ext = new InputFilter(/^[\\d-\\s]+$/)\r\n * ext.applyTo(this.phoneInput)\r\n */\r\nexport default class InputFilter extends Extension\r\n{\r\n    init(regex) {\r\n        this.regex = regex\r\n        this.handler = null\r\n    }\r\n\r\n    onApply(target) {\r\n        let initialValue = this.val()\r\n        this.handler = value => {\r\n            if (!this.regex.text(value)) {\r\n                target instanceof UI \r\n                ? target.value = initialValue \r\n                : target.node.value = initialValue\r\n            } else {\r\n                initialValue = value\r\n            }\r\n        }\r\n\r\n        target.on('input -> filter', this.handler)\r\n        target.on('change -> filter', this.handler)\r\n    }\r\n\r\n    onRemove(target) {\r\n        target.off('input -> filter')\r\n        target.off('change -> filter')\r\n    }\r\n}"],"names":["logPrefix","allowedTagNames","tagNameRegex","classNamesRegex","idRegex","parseTagName","selector","tagName","match","length","includes","msg","console","warn","undefined","parseClassNames","classNames","i","camelCaseToDashSeparated","slice","parseId","id","trim","str","replace","split","splitByUpperCase","join","toLowerCase","selectorSymbol","Symbol","dataSymbol","classesArraySymbol","classNameSymbol","idSymbol","tagNameSymbol","eventsSymbol","extensionsSymbol","elementSymbol","isStylesRendered","targetSymbol","channels","EventsChannel","[object Object]","context","this","name","handlers","eventName","handler","arr","forEach","el","a","hasOwnProperty","HandlersHub","addHandler","removePortHandler","removeAllHandlers","params","runPortHandler","runAllHandlers","ports","port","push","call","p","EventsTarget","on","off","data","trigger","Extendable","super","Element","node","document","createElement","className","Object","defineProperty","value","v","style","getAttribute","setAttribute","symbol","nativeEvents","eventHook","event","parent","target","targetElement","triggerDirect","type","parentNode","len","addEventListener","capture","Styles","cssObject","cssString","styleNode","headNode","getElementsByTagName","ui","enforce","renderRules","rootElement","removeChild","textContent","appendChild","rules","res","nestedRes","t","Scheme","scheme","namespace","indexOf","newClass","build","classList","add","appendTo","counter","UI","constructor","defaultParams","init","arguments","render","createStyles","renderFor","onBeforeRender","createScheme","onRender","tmpTarget","onBeforeAppend","targetNode","querySelector","onAppend","Button","text","color","PRIMARY","disabled","e","textAlign","justifyContent","flexShrink","height","padding","fontSize","border","borderRadius","cursor","userSelect","outline",":disabled","opacity","pointerEvents",".primary","backgroundColor",".red",".primary:hover",".red:hover","RED","Input","placeholder","TEXT","input","label","checkEmpty","focus","remove","display","alignItems","position","width",":disabled + .label",":focus","borderColor","boxShadow",".not-empty + .label","top",":focus + .label","left","marginRight","transition","NUMBER","EMAIL","PASSWORD","Extension","onApply","extensions","onRemove","splice","UIScheme","Localization","locale","translations","translate","builtIn","Select","options","select","innerHTML","emptyOption","option","generateOptions","ProgressBar","wrap","bar","css","flexGrow","LabeledText","labelWidth","textDiv","labelDiv",":after","content","Spinner","size","speed","circle","toString","angle","applyRotation","requestAnimationFrame","marginLeft","marginTop","borderLeft","borderRight","borderTop","borderBottom","InputFilter","regex","initialValue","val"],"mappings":"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"}